---
## Web application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpl-nginx
  namespace: lesson7
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - image: nginx:1.19.2
          name: nginx
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html
      volumes:
        - name: config-volume
          configMap:
            name: nginx-configuration

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: lesson7
spec:
  ports:
    - name: web
      port: 80
  selector:
    app: web
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configuration
  namespace: lesson7
data:
  index.html: |
    Hello Netology

# ============== Ingress ============ #
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-apps
  namespace: lesson7
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
#    cert-manager.io/cluster-issuer: letsencrypt-staging
spec:
  ingressClassName: "nginx"
  rules:
    - host: microk8s.dens-al.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-svc
                port:
                  name: web
    - host: test.dens-al.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-svc
                port:
                  name: web
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
    - hosts:
        - microk8s.dens-al.ru
        - test.dens-al.ru
      secretName: my-ingress-cert # < cert-manager will store the created certificate in this secret.